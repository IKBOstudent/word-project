{"version":3,"file":"taskpane.js","mappings":";4QACA,ovNAqBG,SAEYA,IAAe,4CAe7B,OAf6B,cAA9B,8FACQC,KAAKC,IAAG,6BAAC,WAAOC,GAAO,iEAIlB,OAFOA,EAAQC,SAASC,KACzBL,gBAAgB,6GACtB,OAAO,SAEHG,EAAQG,OAAM,2CACrB,mDAPa,IAQXC,OAAM,SAAUC,GACfC,QAAQC,IAAI,UAAYF,GACpBA,aAAiBG,gBAAgBC,OACnCH,QAAQC,IAAI,eAAiBG,KAAKC,UAAUN,EAAMO,WAEtD,IAAE,2CACL,iCAEcC,IAAU,4CAcxB,OAdwB,cAAzB,8FACQf,KAAKC,IAAG,6BAAC,WAAOC,GAAO,iEAG+B,OADnCA,EAAQC,SAASC,KAAKY,WAAWC,WACzCC,aAAelB,KAAKmB,MAAMC,iBAAiB,SAEpDlB,EAAQG,OAAM,2CACrB,mDANa,IAOXC,OAAM,SAAUC,GACfC,QAAQC,IAAI,UAAYF,GACpBA,aAAiBG,gBAAgBC,OACnCH,QAAQC,IAAI,eAAiBG,KAAKC,UAAUN,EAAMO,WAEtD,IAAE,2CACL,iCAEcO,IAAgB,4CAc9B,OAd8B,cAA/B,8FACQrB,KAAKC,IAAG,6BAAC,WAAOC,GAAO,iEAGW,OADhBA,EAAQC,SAASC,KAAKY,WAAWM,UACzCC,MAAQ,gBAAgB,SAEhCrB,EAAQG,OAAM,2CACrB,mDANa,IAOXC,OAAM,SAAUC,GACfC,QAAQC,IAAI,UAAYF,GACpBA,aAAiBG,gBAAgBC,OACnCH,QAAQC,IAAI,eAAiBG,KAAKC,UAAUN,EAAMO,WAEtD,IAAE,2CACL,iCAEcU,IAAU,4CAkBxB,OAlBwB,cAAzB,8FACQxB,KAAKC,IAAG,6BAAC,WAAOC,GAAO,iEAOxB,OALqBA,EAAQC,SAASC,KAAKY,WAAWC,WAAWQ,UACpDC,KAAKC,IAAI,CACvBC,KAAM,cACNC,MAAM,EACNC,KAAM,KACL,SAEG5B,EAAQG,OAAM,2CACrB,mDAVa,IAWXC,OAAM,SAAUC,GACfC,QAAQC,IAAI,UAAYF,GACpBA,aAAiBG,gBAAgBC,OACnCH,QAAQC,IAAI,eAAiBG,KAAKC,UAAUN,EAAMO,WAEtD,IAAE,2CACL,wBApFDiB,OAAOC,SAAQ,SAACC,GACVA,EAAKC,OAASH,OAAOI,SAASnC,OAC3B+B,OAAO7B,QAAQkC,aAAaC,eAAe,UAAW,QACzD7B,QAAQC,IAAI,kGAIdN,SAASmC,eAAe,oBAAoBC,QAAUxC,EACtDI,SAASmC,eAAe,eAAeC,QAAUxB,EACjDZ,SAASmC,eAAe,sBAAsBC,QAAUlB,EACxDlB,SAASmC,eAAe,eAAeC,QAAUf,EAEjDrB,SAASmC,eAAe,gBAAgBf,MAAMiB,QAAU,OACxDrC,SAASmC,eAAe,YAAYf,MAAMiB,QAAU,OAExD","sources":["webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, Word */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word) {\n    if (!Office.context.requirements.isSetSupported('WordApi', '1.3')) {\n      console.log('Sorry. The tutorial add-in uses Word.js APIs that are not available in your version of Office.');\n    }\n\n    // Assign event handlers and other initialization logic.\n    document.getElementById(\"insert-paragraph\").onclick = insertParagraph;\n    document.getElementById(\"apply-style\").onclick = applyStyle;\n    document.getElementById(\"apply-custom-style\").onclick = applyCustomStyle;\n    document.getElementById(\"change-font\").onclick = changeFont;\n\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n  }\n});\n\nasync function insertParagraph() {\n  await Word.run(async (context) => {\n\n    const docBody = context.document.body;\n    docBody.insertParagraph(\"opa Office has several versions, including Office 2016, Microsoft 365 subscription, and Office on the web.\",\n      \"End\");\n\n    await context.sync();\n  })\n    .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n    });\n}\n\nasync function applyStyle() {\n  await Word.run(async (context) => {\n\n    const firstParagraph = context.document.body.paragraphs.getFirst();\n    firstParagraph.styleBuiltIn = Word.Style.intenseReference;\n\n    await context.sync();\n  })\n    .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n    });\n}\n\nasync function applyCustomStyle() {\n  await Word.run(async (context) => {\n\n    const lastParagraph = context.document.body.paragraphs.getLast();\n    lastParagraph.style = \"MyCustomStyle\";\n\n    await context.sync();\n  })\n    .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n    });\n}\n\nasync function changeFont() {\n  await Word.run(async (context) => {\n\n    const secondParagraph = context.document.body.paragraphs.getFirst().getNext();\n    secondParagraph.font.set({\n      name: \"Courier New\",\n      bold: true,\n      size: 18\n    });\n\n    await context.sync();\n  })\n    .catch(function (error) {\n      console.log(\"Error: \" + error);\n      if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n      }\n    });\n}"],"names":["insertParagraph","Word","run","context","document","body","sync","catch","error","console","log","OfficeExtension","Error","JSON","stringify","debugInfo","applyStyle","paragraphs","getFirst","styleBuiltIn","Style","intenseReference","applyCustomStyle","getLast","style","changeFont","getNext","font","set","name","bold","size","Office","onReady","info","host","HostType","requirements","isSetSupported","getElementById","onclick","display"],"sourceRoot":""}